<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="panda_control_mode" default="position"/>
  <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml"/>
  <rosparam command="load" file="$(find albert_control)/config/albert_controllers.yaml"/>

  <!-- Publish joint_state information -->
  <node name="state_controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        args="franka_state_controller"
  />

  <!-- Working Franka Emika example cartesian controller -->
  <group if="$(eval panda_control_mode == 'example')">
    <rosparam command="load" file="$(find franka_example_controllers)/config/franka_example_controllers.yaml"/>
    <node name="panda_controller_spawner"
          pkg="controller_manager"
          type="spawner"
          respawn="false"
          output="screen"
          args="cartesian_impedance_example_controller"
    />
    <node name="interactive_marker" pkg="franka_example_controllers" type="interactive_marker.py">
      <param name="link_name" value="panda_link0" />
      <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />
    </node>
  </group>

  <!-- Moveit control -->
  <group if="$(eval panda_control_mode == 'moveit')">
    <node name="controller_spawner_arm" pkg="controller_manager" type="spawner" respawn="false" output="screen"
      args="position_joint_trajectory_controller" />
    <include file="$(find albert_moveit_config)/launch/move_group.launch">
    </include>
  </group>

  <!-- Joint group control -->
  <group unless="$(eval panda_control_mode == 'moveit')">
    <group unless="$(eval panda_control_mode == 'example')">
      <node name="controller_spawner_arm" pkg="controller_manager" type="spawner" respawn="false" output="screen"
            args="panda_joint_$(arg panda_control_mode)_controller"/>
    </group>
  </group>

</launch>
